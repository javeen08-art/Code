<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"> 
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>3D Mushrooms</title>
    <link rel="stylesheet" href="mush.css">
    <link rel="icon" href="MushImgs/719A6AB5-B07D-4B8D-B365-2F1CFEE85942.PNG" type="image/png">
  </head>
  <body scroll ="no" style="overflow-x: hidden;">

    <div class ="head">
      <h2>Welcome to <br>  3D Mushrooms</h2>
      <h3>Your Printing Plug.</h3>
      </div>

      
    <div class="but">
       <div class ="q">
         <a href ='#name'>Get A Quote</a>
       </div>
          <button class = "starts">Catalog</button>
          <div class='s2'>
            <a href='index.html'>  Home</a>
            <a href ='about'> About Us</a>
            <a href ='#h'> Services</a>
            <a href ='#faqs' style =" padding-bottom: 7px;">FAQ</a>
          </div>
    </div>
  </div>
    <article>
<div class="bottom">
  <!-- Anchor point for scroll -->
  <div id="bottoms" style="scroll-margin-top: 100px;">

  <!-- Container for home button and nav links -->
  <div class="bottom-container">
    <!-- Home logo link -->
    <div class="home">
      <a href="#front" id="myBtn">
        <img src="MushImgs/719A6AB5-B07D-4B8D-B365-2F1CFEE85942.PNG" alt="logo" style ="scale:0.8">
      </a>
    </div>
    <div class="nextbtn">
      <button class="starts2">≡</button>
      <div class="s3">
            <a href='#front'>  Home</a>
            <a href ='#h'> Services</a>
            <a href ='#name'>Get A Quote</a>
            <a href ='#faqs' style =" padding-bottom: 7px;">FAQ</a>
      </div>
    </div>
  </div>
    <h4>About Us</h4>
    <p>
      3D Mushrooms is redefining the art of printing. Based in Toronto, we specialize in precision 3D printing directly onto walls, wood, glass, concrete, and more, crafted using cutting-edge UV ink technology. We provide mobile service that brings high-definition, waterproof, and long-lasting prints straight to your space, eliminating the limits of traditional print shops.
    </p>
    <h4 class="nd">No shops. No Waiting. Just Art</h4>
    <img src="https://www.culturesouthwest.org.uk/wp-content/uploads/2022/01/image001.jpg" alt="Decorative print">
  </div>
</div>
</article> 
</body>

<script>

// -------- Collapsible Buttons --------
const collapsibleButtons = document.querySelectorAll('.collapsible, .starts, .starts2, .st2,.nextbtnt3');

collapsibleButtons.forEach(function(button) {
  button.addEventListener('click', function(e) {
    e.stopPropagation(); // Prevent event from bubbling to document
    // Toggle 'active' class
    this.classList.toggle('active');

    // Change button text
    if (this.classList.contains('active')) {
      this.textContent = this.textContent.replace('+', '−');
    } else {
      this.textContent = this.textContent.replace('−', '+');
    }

    // Toggle the content section
    const content = this.nextElementSibling;
    if (content) {
      if (content.style.maxHeight) {
        content.style.maxHeight = null;
      } else {
        content.style.maxHeight = content.scrollHeight + "px";
      }
    }
  });
});

// -------- Close open collapsible sections when clicking outside --------
document.addEventListener('click', () => {
  // Close all collapsible sections
  collapsibleButtons.forEach(btn => {
    if (btn.classList.contains('active')) {
      btn.classList.remove('active');
      // Reset button text if needed
      if (btn.textContent.includes('−')) {
        btn.textContent = btn.textContent.replace('−', '+');
      }
      // Close the content
      const content = btn.nextElementSibling;
      if (content) {
        content.style.maxHeight = null;
      }
    }
  });
});

// -------- Dropdown Menu --------
const dropdownBtn = document.querySelector('.dropbtn');
const dropdownContent = document.getElementById('myDropdown');

if (dropdownBtn && dropdownContent) {
  dropdownBtn.addEventListener('click', () => {
    dropdownContent.classList.toggle('show');
  });
}

// Close dropdown when clicking outside
window.addEventListener('click', (event) => {
  if (event.target !== dropdownBtn && !dropdownBtn.contains(event.target)) {
    // Close all dropdowns
    const dropdowns = document.getElementsByClassName('dropdown-content');
    for (let i = 0; i < dropdowns.length; i++) {
      dropdowns[i].classList.remove('show');
    }
  }
});

// -------- Date input min attribute --------
const today = new Date();
const year = today.getFullYear();
const month = String(today.getMonth() + 1).padStart(2, '0');
const day = String(today.getDate()).padStart(2, '0');
const minDate = `${year}-${month}-${day}`;

const bdateInput = document.getElementById('bdate');
if (bdateInput) {
  bdateInput.setAttribute('min', minDate);
}

// -------- Checkbox selection (assuming 'Time' is a name attribute) --------
// Corrected variable 'Time' to a string 'Time'
function lol(checkbox) {
  const checkboxes = document.getElementsByName('Time');
  checkboxes.forEach((item) => {
    if (item !== checkbox) item.checked = false;
  });
}

// -------- Form Submission --------
const form = document.querySelector('form');
const messageDiv = document.getElementById('message');
const loadingDiv = document.getElementById('loading');

if (form) {
  form.addEventListener('submit', (e) => {
    e.preventDefault();

    // Show loading indicator
    if (loadingDiv) loadingDiv.style.display = 'block';

    const formData = new FormData(form);

    fetch(form.action, {
      method: 'POST',
      body: formData
    })
      .then((response) => response.text())
      .then((data) => {
        // Hide loading
        if (loadingDiv) loadingDiv.style.display = 'none';

        // Show message
        if (messageDiv) {
          messageDiv.className = 'show';
        }

        // Reset form
        form.reset();

        // Hide message after 3 seconds
        setTimeout(() => {
          if (messageDiv) messageDiv.className = '';
        }, 3000);
      })
      .catch((error) => {
        if (loadingDiv) loadingDiv.style.display = 'none';
        alert('Error submitting the form. Please try again.');
      });
  });
}
  const sections = {
    front: document.querySelector('#front'),
    bottom: document.querySelector('.bottom'),
    servicess: document.querySelector('.servicess'),
    contacts: document.querySelector('.contacts'),
    faqs: document.querySelector('#faqs')
  };

  let currentSection = null;
  let isProgrammaticScroll = false;

  // Function to navigate to a section
  function goToSection(name) {
    if (sections[name]) {
      isProgrammaticScroll = true;
      sections[name].scrollIntoView({ behavior: 'smooth' });
      currentSection = name;
      setTimeout(() => { isProgrammaticScroll = false; }, 600);
    }
  }

  // Buttons handler
  document.querySelectorAll('.starts, .starts2, .st2').forEach(btn => {
    btn.addEventListener('click', () => {
      const text = btn.innerText.toLowerCase();

      if (text.includes('home')) {
        window.scrollTo({ top: 0, behavior: 'smooth' });
        currentSection = null;
        isProgrammaticScroll = true;
        setTimeout(() => { isProgrammaticScroll = false; }, 600);
      } else if (text.includes('about us')) {
        goToSection('bottom');
      } else if (text.includes('Services.')) {
        goToSection('h');
      } else if (text.includes('get a quote')) {
        goToSection('contacts');
      } else if (text.includes('frequently asked questions')) {
        goToSection('faqs');
      } else if (text.includes('Welcome to 3d mushrooms')) {
        goToSection('front');
      }
    });
  });

  // Track current section based on view
window.addEventListener('scroll', () => {
    let inSection = null;
    for (const key in sections) {
      const rect = sections[key].getBoundingClientRect();
      if (rect.top <= window.innerHeight/2 && rect.bottom >= window.innerHeight/2) {
        inSection = key;
        break;
      }
    }
    if (!isProgrammaticScroll && inSection) {
      currentSection = inSection;
    }
  });

  // Lock scrolling outside the current section
window.addEventListener('scroll', () => {
    if (isProgrammaticScroll) return;
    if (!currentSection) return;

    const sec = sections[currentSection];
    const rect = sec.getBoundingClientRect();

    // Keep within the section boundaries
    if (rect.top >200 ) {
      sec.scrollIntoView({ behavior: 'smooth' });
    }
    if (rect.bottom < window.innerHeight) {
      sec.scrollIntoView({ behavior: 'smooth' });
    }
  });

  // Prevent touch move outside current section on mobile
window.addEventListener('touchmove', (e) => {
    if (isProgrammaticScroll) return;
    if (!currentSection) return;

    const sec = sections[currentSection];
    const rect = sec.getBoundingClientRect();

    // Allow free touchscroll within section
    if (rect.top > 100|| rect.bottom < window.innerHeight) {
      e.preventDefault();
    }
  }, { passive: false });

</script>

</html>